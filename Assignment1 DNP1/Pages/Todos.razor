@page "/Todos"
@using Assignment1_DNP1.Data
@using System.Collections
@using Assignment1_DNP1.Models
@inject ITodoData TodoData
<h3>Todos</h3>
@if (todos == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!todos.Any())
{
    <p>
        <em>No ToDo items exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>User ID</th>
            <th>Todo ID</th>
            <th>Title</th>
            <th>Completed?</th>
            <th>Remove</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in todos)
        {
            <tr>
                <td>@item.UserId</td>
                <td>@item.TodoId</td>
                <td>@item.Title</td>
                <td>
                    <input type="checkbox" checked=@item.IsCompleted @onchange="@((arg) => CompletedChange(arg, item))"/>
                </td>
                <td>
                    <button @onclick="@(() => RemoveTodo(item.TodoId))">
                        <i class="oi oi-trash" style="color:red"/>
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Todo> todos;

    protected override async Task OnInitializedAsync()
    {
        todos = TodoData.GetTodos();
    }

    private void RemoveTodo(int todoId)
    {
        Todo todoToRemove = todos.First(t => t.TodoId == todoId);
        TodoData.RemoveTodo(todoId);
        todos.Remove(todoToRemove);
    }

    private void CompletedChange(ChangeEventArgs evt, Todo todo)
    {
        todo.IsCompleted = (bool) evt.Value;
        TodoData.Update(todo);
    }


}